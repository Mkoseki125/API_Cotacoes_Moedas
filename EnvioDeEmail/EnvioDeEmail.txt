# Importar e instalar bliblioteca REQUESTS pois ela é quem faz a requisição
# Importar JSON pois é a forma como faz a conxão com as APIs
# Importar TUDO ( * ) do TKINTER para usar a tela
# Instalar (pip install pywin32) - Biblioteca de envio de email via outlook e IMPORTAR com apelido (as) win32

import requests
import json
from tkinter import *
import win32com.client as win32

# Variavel cotações recebe a requisição (resquests) .GET (Pegar as informações) + LINK da API
# A variável cotacoes irá armazenar as informações da API, por isso será usada em todas as requisições
# Resposta será 200 que indica OK na conexão da API
# Necessário .JSON para retornar o formato correto das moedas e não apenas 200

def pegar_cotacoes():
    cotacoes = requests.get("https://economia.awesomeapi.com.br/last/USD-BRL,EUR-BRL,BTC-BRL")
    cotacoes = cotacoes.json()

# Pegar apenas as informações GERAIS do Dolar
# BID - Pq é a cotação real e não outras informações Gerais como HIGH/LOW

    cotacoes_dolar = cotacoes['USDBRL']['bid']
    cotacoes_euro = cotacoes['EURBRL']['bid']
    cotacoes_btc = cotacoes['BTCBRL']['bid']

# Necessário criar essa variável que irá trazer as cotações das 3 moedas
# F na frente das 3 aspas pois existe uma resposta variável entre { }
# 3 aspas pois é um conjunto de textos
   
    texto_cotacoes = f'''
    DOLAR: {cotacoes_dolar}\n
    EURO: {cotacoes_euro}\n
    BTC: {cotacoes_btc}
    '''

# Nesse momento ao invés de printar no console irá puxar o TEXTO2 do TK
    # E no TEXT em branco entrará os dados da variável TEXTO_COTACOES

    texto2['text'] = texto_cotacoes

# Necessário o RETURN para poder ser usado em outra função

    return texto_cotacoes

# FUNÇÃO PARA ENVIO DE E-MAIL

def envio_email():

    # Necessário uma variável para receber os dados de outra variavel de OUTRA FUNÇÃO

    x = pegar_cotacoes()
    outlook = win32.Dispatch('outlook.application')
    mail = outlook.CreateItem(0)
    mail.To = 'michell.capua@gmail.com; mkoseki125@gmail.com'
    mail.Subject = 'COTAÇÃO ATUAL DO DÓLAR, EURO E BITCOIN'
    mail.HTMLBody = f'''
         <p><b>A COTAÇÃO ATUAL É DE</b></p>

         <p>{x}</p>

         <p>Att.,</p>
          <p>Michell de Capua</p>
        '''

    mail.Send()
    texto4['text'] = 'E-MAIL ENVIADO'

# Necessário chamar a bliblioteca e manter aberta a janela com o MAINLOOP

interface = Tk()
interface.title('COTAÇÕES')

texto1 = Label(interface, text='Clique no botão para ver a cotação atual')
texto1.grid(column=0, row=0, padx=10, pady=10)

# O botão chamará a função das cotações

botao = Button(interface, text='COTAÇÕES ATUAIS', command=pegar_cotacoes)
botao.grid(column=0, row=1, padx=10, pady=10)

# O texto está em branco pois será printado dentro da função com a variavel TEXTO_COTAÇÔES

texto2 = Label(interface, text='')
texto2.grid(column=0, row=2, padx=10, pady=10)

# Texto para o envio do email

texto3 = Label(interface, text='Clique no botão abaixo para enviar as cotações por E-mail')
texto3.grid(column=0, row=3, padx=10, pady=10)

# Botão para chamar a função de envio do e-mail

botao2 = Button(interface, text='ENVIAR POR E-MAIL', command=envio_email)
botao2.grid(column=0, row=4, padx=10, pady=10)

# Texto de e-mail enviado que será chamado no final da FUNÇÃO envio_email - Por isso aqui fica em branco

texto4 = Label(interface, text='')
texto4.grid(column=0, row=5, padx=10, pady=10)


interface.mainloop()
